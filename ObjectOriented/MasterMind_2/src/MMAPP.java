
import java.awt.Color;
import java.lang.reflect.Array;
import java.util.ArrayList;
import java.util.Vector;
import javax.swing.table.DefaultTableModel;



/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author rawhi
 */
public class MMAPP extends javax.swing.JFrame {

    /**
     * Creates new form MMAPP
     */
    public MMAPP() {
        initComponents();
        setEntryOFF();
        unhideB.setEnabled(false);
    }
    
    public void setEntryOFF(){
        aEntry.setEnabled(false);
        bEntry.setEnabled(false);
        cEntry.setEnabled(false);
        dEntry.setEnabled(false);
        eEntry.setEnabled(false);
        fEntry.setEnabled(false);
        gEntry.setEnabled(false);
        clrB.setEnabled(false);
        addB.setEnabled(false);
        
    }
    
    public void setEntryON(){
        aEntry.setEnabled(true);
        bEntry.setEnabled(true);
        cEntry.setEnabled(true);
        dEntry.setEnabled(true);
        eEntry.setEnabled(true);
        fEntry.setEnabled(true);
        gEntry.setEnabled(true);

    }
    
    public void generateSelection(){
       String set = "ABCDEFG";
       int index = (int)(Math.random() * 7);
       String selection = ""+set.charAt(index);
       make1.setText(selection);
       
       index = (int)(Math.random() * 7);
       selection = ""+set.charAt(index);
       while(selection.equals(make1.getText())){
           index = (int)(Math.random() * 7);
           selection = ""+set.charAt(index);
       }
       make2.setText(selection);
       
       index = (int)(Math.random() * 7);
       selection = ""+set.charAt(index);
       while(selection.equals(make1.getText()) || 
               selection.equals(make2.getText())){
           index = (int)(Math.random() * 7);
           selection = ""+set.charAt(index);
       }
       make3.setText(selection);
       
       index = (int)(Math.random() * 7);
       selection = ""+set.charAt(index);
       while(selection.equals(make1.getText()) || 
               selection.equals(make2.getText()) ||
               selection.equals(make3.getText())){
           index = (int)(Math.random() * 7);
           selection = ""+set.charAt(index);
       }
       make4.setText(selection);
       
       make1.setBackground(Color.BLACK);
       make2.setBackground(Color.BLACK);
       make3.setBackground(Color.BLACK);
       make4.setBackground(Color.BLACK);
    }
    
    public void addMakerEntryChar(String entry){
        if(break1.getText().equals(""))
            break1.setText(entry);
        else if(break2.getText().equals(""))
            break2.setText(entry);
        else if(break3.getText().equals(""))
            break3.setText(entry);
        else if(break4.getText().equals(""))
            break4.setText(entry);
    }
    
    public void clrEntry(){
        break1.setText("");
        break2.setText("");
        break3.setText("");
        break4.setText("");
        aEntry.setEnabled(true);
        bEntry.setEnabled(true);
        cEntry.setEnabled(true);
        dEntry.setEnabled(true);
        eEntry.setEnabled(true);
        fEntry.setEnabled(true);
        gEntry.setEnabled(true);
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        aEntry = new javax.swing.JButton();
        bEntry = new javax.swing.JButton();
        cEntry = new javax.swing.JButton();
        dEntry = new javax.swing.JButton();
        eEntry = new javax.swing.JButton();
        fEntry = new javax.swing.JButton();
        gEntry = new javax.swing.JButton();
        newB = new javax.swing.JButton();
        jSeparator2 = new javax.swing.JSeparator();
        addB = new javax.swing.JButton();
        make1 = new javax.swing.JTextField();
        make2 = new javax.swing.JTextField();
        make4 = new javax.swing.JTextField();
        make3 = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        unhideB = new javax.swing.JButton();
        break1 = new javax.swing.JTextField();
        break2 = new javax.swing.JTextField();
        break4 = new javax.swing.JTextField();
        break3 = new javax.swing.JTextField();
        clrB = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        historyTable = new javax.swing.JTable();
        jScrollPane3 = new javax.swing.JScrollPane();
        feedbackTable = new javax.swing.JTable();
        jLabel3 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        statusL = new javax.swing.JLabel();

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(jTable2);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 0, 0));
        jLabel1.setText("MASTERMIND");

        jSeparator1.setForeground(new java.awt.Color(255, 0, 0));

        aEntry.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        aEntry.setText("A");
        aEntry.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                aEntryActionPerformed(evt);
            }
        });

        bEntry.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        bEntry.setText("B");
        bEntry.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bEntryActionPerformed(evt);
            }
        });

        cEntry.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        cEntry.setText("C");
        cEntry.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cEntryActionPerformed(evt);
            }
        });

        dEntry.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        dEntry.setText("D");
        dEntry.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dEntryActionPerformed(evt);
            }
        });

        eEntry.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        eEntry.setText("E");
        eEntry.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                eEntryActionPerformed(evt);
            }
        });

        fEntry.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        fEntry.setText("F");
        fEntry.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fEntryActionPerformed(evt);
            }
        });

        gEntry.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        gEntry.setText("G");
        gEntry.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                gEntryActionPerformed(evt);
            }
        });

        newB.setBackground(new java.awt.Color(51, 0, 204));
        newB.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        newB.setForeground(new java.awt.Color(255, 255, 255));
        newB.setText("New Game");
        newB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newBActionPerformed(evt);
            }
        });

        jSeparator2.setForeground(new java.awt.Color(0, 0, 204));

        addB.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        addB.setText("ADD");
        addB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addBActionPerformed(evt);
            }
        });

        make1.setEditable(false);
        make1.setBackground(new java.awt.Color(255, 255, 255));
        make1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        make1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                make1ActionPerformed(evt);
            }
        });

        make2.setEditable(false);
        make2.setBackground(new java.awt.Color(255, 255, 255));
        make2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        make4.setEditable(false);
        make4.setBackground(new java.awt.Color(255, 255, 255));
        make4.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        make3.setEditable(false);
        make3.setBackground(new java.awt.Color(255, 255, 255));
        make3.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(0, 0, 204));
        jLabel2.setText("Code-Maker Selection:  ");

        unhideB.setBackground(new java.awt.Color(204, 204, 204));
        unhideB.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        unhideB.setForeground(new java.awt.Color(0, 0, 204));
        unhideB.setText("Unhide");
        unhideB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                unhideBActionPerformed(evt);
            }
        });

        break1.setEditable(false);
        break1.setBackground(new java.awt.Color(255, 255, 255));
        break1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        break1.setForeground(new java.awt.Color(0, 0, 255));

        break2.setEditable(false);
        break2.setBackground(new java.awt.Color(255, 255, 255));
        break2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        break2.setForeground(new java.awt.Color(0, 0, 255));

        break4.setEditable(false);
        break4.setBackground(new java.awt.Color(255, 255, 255));
        break4.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        break4.setForeground(new java.awt.Color(0, 0, 255));

        break3.setEditable(false);
        break3.setBackground(new java.awt.Color(255, 255, 255));
        break3.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        break3.setForeground(new java.awt.Color(0, 0, 255));

        clrB.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        clrB.setText("CLR");
        clrB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clrBActionPerformed(evt);
            }
        });

        historyTable.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        historyTable.setForeground(new java.awt.Color(51, 0, 255));
        historyTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "", "", "", ""
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(historyTable);
        if (historyTable.getColumnModel().getColumnCount() > 0) {
            historyTable.getColumnModel().getColumn(0).setResizable(false);
            historyTable.getColumnModel().getColumn(1).setResizable(false);
            historyTable.getColumnModel().getColumn(2).setResizable(false);
            historyTable.getColumnModel().getColumn(3).setResizable(false);
        }

        feedbackTable.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        feedbackTable.setForeground(new java.awt.Color(255, 0, 0));
        feedbackTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "", "", "", ""
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane3.setViewportView(feedbackTable);
        if (feedbackTable.getColumnModel().getColumnCount() > 0) {
            feedbackTable.getColumnModel().getColumn(0).setResizable(false);
            feedbackTable.getColumnModel().getColumn(1).setResizable(false);
            feedbackTable.getColumnModel().getColumn(2).setResizable(false);
            feedbackTable.getColumnModel().getColumn(3).setResizable(false);
        }

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel3.setText("Feedbacks:");

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel5.setText("History of Selections:");

        statusL.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        statusL.setForeground(new java.awt.Color(255, 0, 0));
        statusL.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        statusL.setText("Start the Game");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jSeparator1)
                    .addComponent(jSeparator2)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(make1, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(make2, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(make3, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(make4, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(unhideB, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(newB))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                    .addComponent(aEntry)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(bEntry)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(cEntry)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(dEntry)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(eEntry)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(fEntry)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(gEntry)))
                            .addComponent(jLabel5))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(break1, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(break2, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(break3, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(break4, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 51, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(clrB)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(addB))
                                    .addComponent(statusL))))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(make3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(make4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(make1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(make2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addComponent(newB)
                    .addComponent(unhideB))
                .addGap(18, 18, 18)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(addB)
                    .addComponent(break3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(break4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(break1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(break2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(aEntry)
                    .addComponent(bEntry)
                    .addComponent(cEntry)
                    .addComponent(dEntry)
                    .addComponent(eEntry)
                    .addComponent(fEntry)
                    .addComponent(gEntry)
                    .addComponent(clrB))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 24, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 345, Short.MAX_VALUE)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                    .addComponent(statusL))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void make1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_make1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_make1ActionPerformed

    private void newBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newBActionPerformed
        // TODO add your handling code here:
        setEntryON();
        unhideB.setEnabled(true);
        generateSelection();
        String selection = make1.getText() + make2.getText() + 
                make3.getText() + make4.getText();
        MasterMindEntry.setMasterEntry(selection); 
        entryCount = 0;
        statusL.setText("Round: " + entryCount + "/15");
        
        DefaultTableModel history = (DefaultTableModel) historyTable.getModel();
        history.setRowCount(0);
        
        DefaultTableModel feedback = (DefaultTableModel) feedbackTable.getModel();
        feedback.setRowCount(0);
    }//GEN-LAST:event_newBActionPerformed

    private void unhideBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_unhideBActionPerformed
        // TODO add your handling code here:
       make1.setBackground(Color.WHITE);
       make2.setBackground(Color.WHITE);
       make3.setBackground(Color.WHITE);
       make4.setBackground(Color.WHITE);
       unhideB.setEnabled(false);
       statusL.setText("You Lost!!");
    }//GEN-LAST:event_unhideBActionPerformed

    private void aEntryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_aEntryActionPerformed
        addMakerEntryChar("A");
        aEntry.setEnabled(false);
        
        clrB.setEnabled(true);
        if(break4.getText().length() != 0)
            addB.setEnabled(true);
    }//GEN-LAST:event_aEntryActionPerformed

    private void bEntryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bEntryActionPerformed
        // TODO add your handling code here:
        addMakerEntryChar("B");
        bEntry.setEnabled(false);
        
        clrB.setEnabled(true);
        if(break4.getText().length() != 0)
            addB.setEnabled(true);
    }//GEN-LAST:event_bEntryActionPerformed

    private void cEntryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cEntryActionPerformed
        // TODO add your handling code here:
        addMakerEntryChar("C");
        cEntry.setEnabled(false);

        clrB.setEnabled(true);
        if(break4.getText().length() != 0)
            addB.setEnabled(true);
    }//GEN-LAST:event_cEntryActionPerformed

    private void dEntryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dEntryActionPerformed
        // TODO add your handling code here:
        addMakerEntryChar("D");
        dEntry.setEnabled(false);
        
        clrB.setEnabled(true);
        if(break4.getText().length() != 0)
            addB.setEnabled(true);
    }//GEN-LAST:event_dEntryActionPerformed

    private void eEntryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_eEntryActionPerformed
        // TODO add your handling code here:
        addMakerEntryChar("E");
        eEntry.setEnabled(false);

        clrB.setEnabled(true);
        if(break4.getText().length() != 0)
            addB.setEnabled(true);
    }//GEN-LAST:event_eEntryActionPerformed

    private void fEntryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fEntryActionPerformed
        // TODO add your handling code here:
        addMakerEntryChar("F");
        fEntry.setEnabled(false);

        clrB.setEnabled(true);
        if(break4.getText().length() != 0)
            addB.setEnabled(true);
    }//GEN-LAST:event_fEntryActionPerformed

    private void gEntryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_gEntryActionPerformed
        // TODO add your handling code here:
        addMakerEntryChar("G");
        gEntry.setEnabled(false);

        clrB.setEnabled(true);
        if(break4.getText().length() != 0)
            addB.setEnabled(true);
        
    }//GEN-LAST:event_gEntryActionPerformed

    private void clrBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clrBActionPerformed
        // TODO add your handling code here:
        clrEntry();
        clrB.setEnabled(false);
        addB.setEnabled(false);
    }//GEN-LAST:event_clrBActionPerformed

    private void addBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addBActionPerformed
        // ONLY Complete this part
        String playerEntryString = break1.getText() + break2.getText() + break3.getText() + break4.getText();
        game.setPlayerEntry(playerEntryString);
        if("YYYY".equals(game.getFeedback()))
        {
            clrEntry();
            addB.setEnabled(false);
            clrB.setEnabled(false);
            aEntry.setEnabled(false);
            bEntry.setEnabled(false);
            cEntry.setEnabled(false);
            dEntry.setEnabled(false);
            eEntry.setEnabled(false);
            fEntry.setEnabled(false);
            gEntry.setEnabled(false);
            unhideB.setEnabled(false);
            make1.setBackground(Color.WHITE);
            make2.setBackground(Color.WHITE);
            make3.setBackground(Color.WHITE);
            make4.setBackground(Color.WHITE);
            model = (DefaultTableModel) historyTable.getModel();
            model.addRow(game.getPlayerEntryArray());
            model = (DefaultTableModel) feedbackTable.getModel();
            model.addRow(game.getFeedbackArray());
            statusL.setText("YOU WON!!");
            return;
        }
        if(entryCount >= 14)
        {
            statusL.setText("No moves left!!");
            clrEntry();
            addB.setEnabled(false);
            clrB.setEnabled(false);
            aEntry.setEnabled(false);
            bEntry.setEnabled(false);
            cEntry.setEnabled(false);
            dEntry.setEnabled(false);
            eEntry.setEnabled(false);
            fEntry.setEnabled(false);
            gEntry.setEnabled(false);
            return;
        }
        model = (DefaultTableModel) historyTable.getModel();
        model.addRow(game.getPlayerEntryArray());
        model = (DefaultTableModel) feedbackTable.getModel();
        model.addRow(game.getFeedbackArray());
        entryCount++;
        statusL.setText("Round: " + entryCount + "/15");
        clrEntry();
        addB.setEnabled(false);
        clrB.setEnabled(false);
    }//GEN-LAST:event_addBActionPerformed
    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MMAPP.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MMAPP.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MMAPP.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MMAPP.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MMAPP().setVisible(true);
            }
        });
    }
    
    private int entryCount = 0;
    private DefaultTableModel model;
    private MasterMindEntry game = new MasterMindEntry("    ");
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton aEntry;
    private javax.swing.JButton addB;
    private javax.swing.JButton bEntry;
    private javax.swing.JTextField break1;
    private javax.swing.JTextField break2;
    private javax.swing.JTextField break3;
    private javax.swing.JTextField break4;
    private javax.swing.JButton cEntry;
    private javax.swing.JButton clrB;
    private javax.swing.JButton dEntry;
    private javax.swing.JButton eEntry;
    private javax.swing.JButton fEntry;
    private javax.swing.JTable feedbackTable;
    private javax.swing.JButton gEntry;
    private javax.swing.JTable historyTable;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JTable jTable2;
    private javax.swing.JTextField make1;
    private javax.swing.JTextField make2;
    private javax.swing.JTextField make3;
    private javax.swing.JTextField make4;
    private javax.swing.JButton newB;
    private javax.swing.JLabel statusL;
    private javax.swing.JButton unhideB;
    // End of variables declaration//GEN-END:variables
}
